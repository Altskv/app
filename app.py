import streamlit as st
import random

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã –∏ —Å—Ç–∏–ª–µ–π
st.set_page_config(page_title="Event Planning Simulation", page_icon="üéâ")

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∏–ª–∏
st.markdown("""
    <style>
    .title {
        font-size: 2em;
        color: #1E90FF;
        font-weight: bold;
    }
    .subheader {
        font-size: 1.5em;
        color: #333333;
    }
    .task {
        font-size: 1.2em;
        color: #555555;
    }
    .result {
        font-size: 1.3em;
        font-weight: bold;
        color: #228B22;
    }
    .section-divider {
        border-top: 1px solid #D3D3D3;
        margin: 10px 0;
    }
    </style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown('<p class="title">Event Planning: Traditional vs. rentArest</p>', unsafe_allow_html=True)

st.write("### –°—Ä–∞–≤–Ω–∏—Ç–µ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é rentArest.")
st.write("**–¶–µ–ª—å**: –£–≤–∏–¥–µ—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ rentArest —ç–∫–æ–Ω–æ–º–∏—Ç –≤–∞—à–µ –≤—Ä–µ–º—è –∏ —É—Å–∏–ª–∏—è –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.")

# –°–∏–º—É–ª—è—Ü–∏—è —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞
def traditional_method():
    st.markdown('<p class="subheader">–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–±</p>', unsafe_allow_html=True)
    total_time = 0
    tasks = [
        ("–ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –º–µ—Å—Ç–∞", random.randint(10, 15)),
        ("–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã —Å –ø–ª–æ—â–∞–¥–∫–æ–π", random.randint(5, 10)),
        ("–ü–æ–∏—Å–∫ –∫–µ–π—Ç–µ—Ä–∏–Ω–≥–∞", random.randint(8, 12)),
        ("–ó–∞–∫–∞–∑ —É—Å–ª—É–≥ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", random.randint(6, 10)),
        ("–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏", random.randint(4, 8))
    ]

    for task, duration in tasks:
        st.markdown(f'<p class="task">‚Ä¢ {task}... ({duration} –º–∏–Ω—É—Ç)</p>', unsafe_allow_html=True)
        total_time += duration

    st.markdown(f'<p class="result">–í—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {total_time} –º–∏–Ω—É—Ç</p>', unsafe_allow_html=True)
    return total_time

# –°–∏–º—É–ª—è—Ü–∏—è —Å rentArest
def rentArest_method():
    st.markdown('<p class="subheader">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é rentArest</p>', unsafe_allow_html=True)
    total_time = 0
    tasks = [
        ("–í—ã–±–æ—Ä —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ –±—é–¥–∂–µ—Ç–∞", 2),
        ("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–ª–æ—â–∞–¥–æ–∫", 1),
        ("–í—ã–±–æ—Ä –∫–µ–π—Ç–µ—Ä–∏–Ω–≥–∞ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π", 1),
        ("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞", 1)
    ]

    for task, duration in tasks:
        st.markdown(f'<p class="task">‚Ä¢ {task}... ({duration} –º–∏–Ω—É—Ç—ã)</p>', unsafe_allow_html=True)
        total_time += duration

    st.markdown(f'<p class="result">–í—Å–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å rentArest: {total_time} –º–∏–Ω—É—Ç—ã</p>', unsafe_allow_html=True)
    return total_time

# –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if st.button("–ù–∞—á–∞—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é"):
    traditional_time = traditional_method()
    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)
    rentArest_time = rentArest_method()

    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)
    st.markdown('<p class="subheader">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</p>', unsafe_allow_html=True)
    st.write(f"–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–Ω—è–ª–æ: **{traditional_time} –º–∏–Ω—É—Ç**.")
    st.write(f"–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å rentArest –∑–∞–Ω—è–ª–æ: **{rentArest_time} –º–∏–Ω—É—Ç—ã**.")

    if rentArest_time < traditional_time:
        st.markdown(f'<p class="result">–í—ã —Å—ç–∫–æ–Ω–æ–º–∏–ª–∏ {traditional_time - rentArest_time} –º–∏–Ω—É—Ç –±–ª–∞–≥–æ–¥–∞—Ä—è rentArest!</p>', unsafe_allow_html=True)
        st.success("rentArest —É–ø—Ä–æ—â–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏ —ç–∫–æ–Ω–æ–º–∏—Ç –≤–∞—à–µ –≤—Ä–µ–º—è.")
    else:
        st.info("–° rentArest –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —É–¥–æ–±—Å—Ç–≤–æ –∏ –º–µ–Ω—å—à–µ —Å—Ç—Ä–µ—Å—Å–∞!")

st.write("–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!")
